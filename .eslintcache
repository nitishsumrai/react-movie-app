[{"C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\index.js":"1","C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\components\\App.js":"2","C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\data.js":"3","C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\components\\Navbar.js":"4","C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\components\\MovieCard.js":"5","C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\Reducers\\index.js":"6","C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\actions\\index.js":"7"},{"size":3039,"mtime":1608220626516,"results":"8","hashOfConfig":"9"},{"size":2173,"mtime":1608220686490,"results":"10","hashOfConfig":"9"},{"size":17598,"mtime":1607524016635,"results":"11","hashOfConfig":"9"},{"size":1820,"mtime":1608226515039,"results":"12","hashOfConfig":"9"},{"size":1344,"mtime":1608212533240,"results":"13","hashOfConfig":"9"},{"size":2402,"mtime":1607850932356,"results":"14","hashOfConfig":"9"},{"size":1762,"mtime":1608219065962,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1759o5g",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\index.js",["34"],"// package import\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {Provider} from 'react-redux'\n\n// file import\nimport './index.css';\nimport App from './components/App';\nimport rootReducer from './Reducers/index'\nimport { render } from '@testing-library/react';\n\n\n// following function is curried form of logger function(obj,next,action)\n// redux will call this function as logger(obj)(next)(action)\n// const logger = function ({ dispatch, getState }) {\n//   return function (next) {\n//     return function (action) {\n//       // middleware code\n//       console.log('ACTION_TYPE= ', action.type);\n//       next(action);\n//     }\n//   }\n// }\n// another way to write middleware\n\nconst logger = ({ dispatch, getState }) => (next) => (action) => {\n  if (typeof action !== 'function') {\n    console.log('ACTION_TYPE = ', action.type);\n  }\n  next(action)\n}\n// use thunk library instead\n// const thunk = ({ dispatch, getState }) => (next) => (action) => {\n//   // console.log('ACTION_TYPE = ', action.type);\n//   if (typeof action === 'function') {\n//     action(dispatch);\n//     return;\n//   }\n//   next(action);\n// }\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n// export const StoreContext = createContext();\n// console.log('Store Context:', StoreContext)\n// console.log('store', store);\n// class Provider extends React.Component {\n//   render() {\n//     const { store } = this.props;\n//     console.log('Properties-', this.props);\n//     return <StoreContext.Provider value={store}>\n//       {this.props.children}\n//     </StoreContext.Provider>\n//   }\n// }\n\n// console.log('Before state', store.getState());\n// store.dispatch({\n//   type: 'ADD_MOVIES',\n//   movies: [{\n//     name: 'Superman'\n//   }]\n// })\n\n// console.log('After state', store.getState());\n\n// const connectedAppComponent = connect(callback)(App);\n// export function connect(callback) {\n//   return (Component) => {\n//     class ConnectedComponent extends React.Component {\n//       constructor(props) {\n//         super(props);\n//         this.unSubscribe = this.props.store.subscribe(() => this.forceUpdate());\n//       }\n//       componentWillUnmount() {\n//         //  this will destroy the listener \n//         this.unSubscribe();\n//       }\n//       render() {\n//         const { store } = this.props;\n//         const state = store.getState();\n//         const dataToBePassed = callback(state);\n//         return (<Component {...dataToBePassed}\n//           dispatch={store.dispatch}\n//         />)\n//       }\n//     }\n//   return class ConnectedComponentWrapper extends React.Component {\n//     render() {\n//       return (<StoreContext>\n//         {\n//           (store) => {\n//             return (<ConnectedComponent store={store} />)\n//           }\n//         }\n//       </StoreContext>)\n//     }\n//   }\n// }\n// }\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n",["35","36"],"C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\components\\App.js",["37"],"import React from 'react';\n\nimport { data } from '../data';\nimport Navbar from './Navbar';\nimport MovieCard from './MovieCard';\nimport { addMovies, changeListElement } from '../actions/index';\nimport { connect } from \"react-redux\";\nclass App extends React.Component {\n\n\n  componentDidMount() {\n  \n\n    // make api call\n    // dispatch action\n    // pass an action to reducer\n    this.props.dispatch(addMovies(data));\n  }\n  isMovieFavourite = (movie) => {\n    const { movies } = this.props;  // { movies:{} , search:{}}\n    const { favourites } = movies;\n    const index = favourites.indexOf(movie);\n    //  console.log(index)\n    if (index !== -1) {\n      // movie found\n      return true;\n    }\n    return false;\n  };\n  handleListElement = (showfavourite) => {\n    const { store } = this.props;\n    store.dispatch(changeListElement(showfavourite));\n  }\n  render() {\n\n\n    const { movies, search } = this.props;  // { movies:{} , search:{}}\n    const { show_favourite } = movies;\n    const list = show_favourite ? movies.favourites : movies.list;\n\n    return (\n      <div className=\"App\">\n        <Navbar\n          \n        />\n        <div className=\"main\">\n          <div className=\"tabs\">\n\n            <div className={`tab ${show_favourite ? '' : 'active-tabs'}`} onClick={() => { this.handleListElement(false) }}>Movies</div>\n            <div className={`tab ${show_favourite ? 'active-tabs' : ''}`} onClick={() => { this.handleListElement(true) }}>Favourites</div>\n          </div>\n          <div className=\"list\">\n\n            {list.map((movie, index) => {\n              return <MovieCard\n                movie={movie}\n                key={`movies-${index}`}\n                dispatch={this.props.dispatch}\n                isFavourite={this.isMovieFavourite(movie)}\n              />\n            })}\n          </div>\n          {list.length === 0 ? <div className='no-movies'>No movies to Display</div> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// state is store's data\nfunction callback(state) {\n  return {\n      movies: state.movies,\n      search: state.search\n  }\n}\nconst ConnectedAppComponent = connect(callback)(App);\nexport default ConnectedAppComponent;\n","C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\data.js",[],"C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\components\\Navbar.js",[],"C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\components\\MovieCard.js",[],"C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\Reducers\\index.js",["38"],"import { act } from 'react-dom/test-utils';\r\nimport { combineReducers } from 'redux'\r\nimport { ADD_MOVIES, ADD_TO_FAVOURITE, REMOVE_FROM_FAVOURITE, CHANGE_LIST_ELEMENT, ADD_SEARCH_RESULT, ADD_TO_MOVIES } from '../actions/index';\r\n// Reducers function should allways be a pure function\r\n// pure functions have following properties\r\n// 1.same output for same input\r\n// 2.output should be based on passed arguments only(no var outside from the function should be used)\r\n// 3.functions should not have any side effects\r\n\r\nconst intialMoviesState = {\r\n    list: [],\r\n    favourites: [],\r\n    show_favourite: false\r\n}\r\n\r\n\r\n// state is default arg in following function which means is passed then assigned object will be its value\r\nexport function movies(state = intialMoviesState, action) {\r\n    console.log('Movie Reducer')\r\n    switch (action.type) {\r\n        case ADD_MOVIES:\r\n            return {\r\n                ...state,\r\n                list: action.movies\r\n            };\r\n        case ADD_TO_FAVOURITE:\r\n            return {\r\n                ...state,\r\n                favourites: [action.movie, ...state.favourites]\r\n            };\r\n        case REMOVE_FROM_FAVOURITE:\r\n            return {\r\n                ...state,\r\n                favourites: state.favourites.filter((movie) => { return movie.Title !== action.movie.Title })\r\n            };\r\n        case CHANGE_LIST_ELEMENT:\r\n            return {\r\n                ...state,\r\n                show_favourite: action.showFavourite\r\n            };\r\n        case ADD_TO_MOVIES:\r\n            return {\r\n                ...state,\r\n                list: [action.movie, ...state.list] \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst intialSearchState = {\r\n    result: {},\r\n    showSearchResults: false\r\n}\r\n\r\nexport function search(state = intialSearchState, action) {\r\n    if (action.type === ADD_SEARCH_RESULT) {\r\n        return {\r\n            ...state,\r\n            result: action.movie,\r\n            showSearchResults: true\r\n        }\r\n    }\r\n    if (action.type === ADD_TO_MOVIES) {\r\n        return {\r\n            ...state,\r\n            result: {},\r\n            showSearchResults: false\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\n// const intialRootState = {\r\n//     movies: intialMoviesState,\r\n//     search: intialSearchState\r\n// }\r\n\r\nexport default combineReducers({\r\n    movies: movies,\r\n    search: search\r\n})\r\n","C:\\Users\\Nitish\\Desktop\\nodews\\ReactJs\\movie-app\\src\\actions\\index.js",[],{"ruleId":"39","severity":1,"message":"40","line":13,"column":10,"nodeType":"41","messageId":"42","endLine":13,"endColumn":16},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"39","severity":1,"message":"47","line":37,"column":21,"nodeType":"41","messageId":"42","endLine":37,"endColumn":27},{"ruleId":"39","severity":1,"message":"48","line":1,"column":10,"nodeType":"41","messageId":"42","endLine":1,"endColumn":13},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'search' is assigned a value but never used.","'act' is defined but never used.","no-global-assign","no-unsafe-negation"]